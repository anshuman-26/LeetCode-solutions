//Approach 1

class Solution {
    public boolean isValid(String s) {
        HashMap<Character, Character> map = new HashMap<>();
        map.put(')','(');
        map.put(']','[');
        map.put('}','{');
        Stack<Character> stack = new Stack<>();
        for(int i=0; i<s.length(); i++){
            char singleChar = s.charAt(i);
            if(map.containsKey(singleChar)){
                if(stack.empty()){
                    return false;
                }else{
                    char topValue = stack.pop();
                    if(topValue != map.get(singleChar)){
                        return false;
                    }
                }
            }else{
                stack.push(singleChar);
            }
        }
        return stack.isEmpty();
    }
}


//Approach 2

class Solution {
    public boolean isValid(String s) {
        int length;
        do{
            length = s.length();
            s = s.replace("()","").replace("{}","").replace("[]","");
        }while(length != s.length());
        
        return s.length() == 0;
    }
}